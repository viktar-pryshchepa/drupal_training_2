<?php
/**
 * Implements hook_block_info().
 */
function mycurrency_block_info() {
  $blocks = array();
  $blocks['currency_block'] = array(
    'info' => t('Block shows currencies'),
  );

  return $blocks;
}

/**
 * @param string $delta
 * @return array
 */
function mycurrency_block_configure($delta='') {
  $form = array();
  switch($delta) {
    case 'currency_block' :
      $currencies_array = xml_to_array_nbrb();
      $currencies_codes = array();
      foreach($currencies_array as $tmp)
      {
        $currencies_codes[$tmp['CharCode']] = $tmp['CharCode'];

      }
      $form['currency_checkbox'] = array(
        '#type' => 'checkboxes',
        '#title' => 'Choose currencies',
        '#options' => $currencies_codes,//array('ch1', 'ch2'),
        '#default_value' => variable_get('currencies_to_show', 'USD'),
      );
  }
  return $form;
}
function mycurrency_block_save($delta = '', $edit = array()) {
  switch($delta) {
    case 'currency_block' :
      $edit['currency_checkbox'] = array_filter($edit['currency_checkbox']);
      variable_set('currencies_to_show', $edit['currency_checkbox']);
      cache_clear_all('mycurrency_cache_block','cache_block');
      break;
  }
  return;
}
/**
 * Implements block view hook
 * @param string $delta
 * @return array
 */
function mycurrency_block_view($delta='') {
  $block = array();
  switch($delta) {
    case 'currency_block' :
      $checked_currencies_array = variable_get('currencies_to_show', array('USD'=>'USD'));
      $block['content'] = mycurrency_view($checked_currencies_array);
      break;
  }

  return $block;
}
/**
 * Helps to render block
 * @param (array)$checked_currencies_array
 * @return null|string
 */
function mycurrency_view($checked_currencies_array) {
  $currencies_array = xml_to_array_nbrb();
  foreach($currencies_array as $tmp)
  {
    if(in_array($tmp['CharCode'],$checked_currencies_array)){
      $currencies_all[$tmp['CharCode']] = $tmp;
    }
  }
  if(isset($currencies_all)){
    return render_currencies_table($currencies_all);
  }
  else return t('please choose currencies to show');
}
/**
 * Function to render block; returns html;
 * @param (array)$currencies_all
 * @return string
 */
function render_currencies_table($currencies_all) {
  $header = array(
    'Code',
    'Rate',
  );
  $rows = array();
  foreach($currencies_all as $currency)
  {
    $rows[] = array($currency['CharCode'], $currency['Rate']);
  }
  $vars = array(
    'header' => $header,
    'rows' => $rows,
    'attributes' => array('id' => 'table-currencies'),
    'caption' => 'Currencies rates',
    'colgroups' => array(),
    'sticky' => FALSE,
    'empty' => array(),
  );
  $cache = cache_get('mycurrency_cache_block', 'cache_block');
  if (!empty($cache) && isset($cache->data) && !empty($cache->data)) {
    $result =  $cache->data;
  }
  else{
    $result = theme('table', $vars) . t('Last update on:') . '<br>' . format_date(time(),'medium','Y-m-d H:i:s');
    cache_set('mycurrency_cache_block', $result, 'cache_block', time() + 3600);
  }
  return $result;
}
function xml_to_array_nbrb() {
  $xml = simplexml_load_file('http://www.nbrb.by/Services/XmlExRates.aspx', 'SimpleXMLElement');
  $curr = array();
  foreach($xml as $obj) {
    $curr[] = array(
      'CharCode' => (string)$obj->CharCode,
      'Rate' => (string)$obj->Rate,
    );
  }
  return $curr;
}
?>